##
## This target will match all vfs.fs.size[*,pfree] requests
## and generate uniform random numbers in range 1 to 100
##
[filesystems.size pfree]
match=vfs.fs.size\[(.?),pfree\]
value=uniform:1,100
[application.connections]
value=uniform_int:1,100

##
## This target will match all vfs.fs.size[*,free] requests
## and request data from REDIS
##
[filesystem.size free]
match=vfs.fs.size\[(.?),free\]
value=redis:
[all net.if.in]
match=net.if.in*
value=redis:
[all net.if.out]
match=net.if.out*
value=redis:
##
## CPU time
##
[all system.cpu.util]
match=system.cpu.util*
value=scenario:
scenario={"min":0,"max":30,"type":"float","variation_min":10,"variation_max":10}
##
## System load (1 min average)
##
[system.cpu.load avg1]
match=system.cpu.load\[percpu,avg1\]
value=scenario:
scenario={"min":0,"max":10,"type":"float","variation_min":50,"variation_max":50,"spike_barrier":3,"spike_width":6}

[system.cpu.load avg15]
match=system.cpu.load\[percpu,avg15\]
value=scenario:
scenario={"min":0,"max":10,"type":"float","variation_min":10,"variation_max":30}

##
## Network interfaces
##
[all net.if.in]
match=net.if.in*
value=scenario:
scenario={"min":0,"max":100000,"type":"int","variation_rnd":1,"spike_barrier":3,"spike_width":6}
[all net.if.out]
match=net.if.out*
value=scenario:
scenario={"min":0,"max":100000,"type":"int","variation_min":5,"variation_max":5,"spike_barrier":10,"spike_width":6}

##
## This target will match all vfs.fs.size[*,used] requests
## and request data from REDIS lists
##
[filesystem.size used]
match=vfs.fs.size\[(.?),used\]
value=rqueue:

##
## This target will match agent.ping requests
## and return static value 1
[agent.ping]
value=static:1
